/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 23 21:50:15 GMT 2020
 */

package com.br.rfs.desafio.itau.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import com.br.rfs.desafio.itau.domain.StatisticsDomain;
import java.math.BigDecimal;
import java.math.MathContext;

public class StatisticsDomain_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      String string0 = statisticsDomain0.toString();
      assertEquals("StatisticsDomain(count=null, sum=null, avg=null, min=null, max=null)", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setSum(bigDecimal0);
      statisticsDomain0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setMax(bigDecimal0);
      statisticsDomain0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      statisticsDomain0.setAvg(bigDecimal0);
      statisticsDomain0.hashCode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setMin(bigDecimal0);
      statisticsDomain0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      Integer integer0 = new Integer(1);
      statisticsDomain0.setCount(integer0);
      statisticsDomain0.hashCode();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      statisticsDomain0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain1.setMax(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      Object object0 = new Object();
      boolean boolean0 = statisticsDomain0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      Integer integer0 = new Integer(1);
      statisticsDomain1.setCount(integer0);
      boolean boolean0 = statisticsDomain1.equals(statisticsDomain0);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      Integer integer0 = new Integer(1);
      statisticsDomain0.setCount(integer0);
      boolean boolean0 = statisticsDomain1.equals(statisticsDomain0);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      Integer integer0 = new Integer(1);
      statisticsDomain1.setCount(integer0);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      
      statisticsDomain0.setCount(integer0);
      boolean boolean0 = statisticsDomain1.equals(statisticsDomain0);
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setSum(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain1.setSum(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      statisticsDomain0.setAvg(bigDecimal0);
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain1.setAvg(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setMin(bigDecimal0);
      statisticsDomain0.setSum(bigDecimal0);
      statisticsDomain1.setSum(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain1.setMin(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain1.setMin(bigDecimal0);
      statisticsDomain0.setMin(bigDecimal0);
      statisticsDomain0.setSum(bigDecimal0);
      assertFalse(statisticsDomain0.equals((Object)statisticsDomain1));
      
      statisticsDomain1.setSum(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      statisticsDomain0.setMax(bigDecimal0);
      statisticsDomain0.setAvg(bigDecimal0);
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      statisticsDomain1.setAvg(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      statisticsDomain0.setAvg(bigDecimal0);
      statisticsDomain0.setMax(bigDecimal0);
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      statisticsDomain1.setMax(bigDecimal0);
      assertFalse(statisticsDomain1.equals((Object)statisticsDomain0));
      
      statisticsDomain1.setAvg(bigDecimal0);
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertTrue(statisticsDomain1.equals((Object)statisticsDomain0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = statisticsDomain0.getAvg();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = statisticsDomain0.getMax();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      Integer integer0 = statisticsDomain0.getCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = statisticsDomain0.getSum();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = statisticsDomain0.getMin();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      boolean boolean0 = statisticsDomain0.canEqual("StatisticsDomain(count=null, sum=0, avg=null, min=null, max=null)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      boolean boolean0 = statisticsDomain0.canEqual(statisticsDomain0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(918L);
      statisticsDomain0.setAvg(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getAvg();
      assertEquals((short)918, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal((-489));
      statisticsDomain0.setAvg(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getAvg();
      assertEquals((short) (-489), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      statisticsDomain0.setAvg(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getAvg();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      Integer integer0 = new Integer(59);
      statisticsDomain0.setCount(integer0);
      Integer integer1 = statisticsDomain0.getCount();
      assertEquals(59, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      Integer integer0 = new Integer(0);
      statisticsDomain0.setCount(integer0);
      Integer integer1 = statisticsDomain0.getCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      Integer integer0 = new Integer((-622));
      statisticsDomain0.setCount(integer0);
      Integer integer1 = statisticsDomain0.getCount();
      assertEquals((-622), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(1247);
      statisticsDomain0.setMax(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMax();
      assertEquals((short)1247, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal((-489));
      statisticsDomain0.setMax(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMax();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      statisticsDomain0.setMax(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMax();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      MathContext mathContext0 = MathContext.DECIMAL128;
      BigDecimal bigDecimal0 = new BigDecimal((-2309L), mathContext0);
      statisticsDomain0.setMin(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMin();
      assertEquals((byte) (-5), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal((-489));
      statisticsDomain0.setMin(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMin();
      assertEquals((byte)23, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      statisticsDomain0.setMin(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMin();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setMin(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getMin();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal((-1));
      statisticsDomain0.setSum(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getSum();
      assertEquals((short) (-1), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      statisticsDomain0.setSum(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getSum();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      statisticsDomain0.setSum(bigDecimal0);
      BigDecimal bigDecimal1 = statisticsDomain0.getSum();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StatisticsDomain statisticsDomain0 = new StatisticsDomain();
      BigDecimal bigDecimal0 = new BigDecimal(1293);
      statisticsDomain0.setMin(bigDecimal0);
      StatisticsDomain statisticsDomain1 = new StatisticsDomain();
      boolean boolean0 = statisticsDomain0.equals(statisticsDomain1);
      assertFalse(boolean0);
  }
}
